{"version":3,"file":"app.js","sources":["App.vue","main.js"],"sourcesContent":["<template>\n  <!-- 根模板无需改动 -->\n  <slot />\n</template>\n\n<script setup>\nimport { onLaunch, onShow, onHide } from '@dcloudio/uni-app';\n\nlet pollingTimer = null; // 轮询定时器\n\n/**\n * 安全设置 TabBar Badge，仅在 TabBar 页面操作\n */\nconst safeSetTabBarBadge = (total) => {\n    const pages = getCurrentPages();\n    const currentPage = pages[pages.length - 1];\n    const tabBarRoutes = [\n        'pages/index/index',\n        'pages/previewList/previewList',\n        'pages/chatList/chatList',\n        'pages/profile/profile'\n    ];\n    if (!tabBarRoutes.includes(currentPage.route)) return;\n    try {\n        if (total > 0) {\n            uni.setTabBarBadge({\n                index: 2,\n                text: total > 99 ? '99+' : total.toString()\n            });\n        } else {\n            uni.removeTabBarBadge({ index: 2 });\n        }\n    } catch (e) {\n        console.warn('[Global Polling] 设置/移除 TabBarBadge 失败:', e);\n    }\n};\n\n/**\n * 获取总未读消息数并更新 TabBar 角标\n */\nconst fetchTotalUnreadCount = async (phoneNumber) => {\n    if (!phoneNumber) return;\n    try {\n        const res = await uniCloud.callFunction({\n            name: 'get-total-unread-count',\n            data: { userPhoneNumber: phoneNumber }\n        });\n        if (res.result.success) {\n            safeSetTabBarBadge(res.result.totalUnread || 0);\n        }\n    } catch (error) {\n        console.error('[Global Polling] 获取总未读数失败:', error);\n    }\n};\n\n/**\n * 静默同步最新 UserInfo 到 storage\n */\nconst syncUserInfo = async () => {\n    const userInfo = uni.getStorageSync('userinfo');\n    if (!userInfo?._id) return;\n    try {\n        const res = await uniCloud.callFunction({\n            name: 'getUserInfo',\n            data: { userId: userInfo._id }\n        });\n        if (res.result.code === 0 && res.result.userInfo) {\n            uni.setStorageSync('userinfo', res.result.userInfo);\n            console.log('[SyncUserInfo] 已同步最新 userInfo');\n        }\n    } catch (e) {\n        console.error('[SyncUserInfo] 同步失败:', e);\n    }\n};\n\n/**\n * 启动轮询机制\n */\nconst startPolling = () => {\n    const userInfo = uni.getStorageSync('userinfo');\n    const phone = userInfo?.phoneNumber;\n    if (!phone) return;\n    fetchTotalUnreadCount(phone);\n    pollingTimer = setInterval(() => fetchTotalUnreadCount(phone), 45000);\n};\n\n/**\n * 停止轮询机制\n */\nconst stopPolling = () => {\n    if (pollingTimer) {\n        clearInterval(pollingTimer);\n        pollingTimer = null;\n    }\n};\n\n// --- App 生命周期 ---\nonLaunch(() => {\n    console.log('App 启动');\n    startPolling();\n});\n\nonShow(async () => {\n    console.log('App 显示');\n    // 先静默同步最新用户信息\n    await syncUserInfo();\n    // 再启动或刷新轮询\n    const userInfo = uni.getStorageSync('userinfo');\n    if (userInfo?.phoneNumber) {\n        if (!pollingTimer) {\n            startPolling();\n        } else {\n            fetchTotalUnreadCount(userInfo.phoneNumber);\n        }\n    }\n});\n\nonHide(() => {\n    console.log('App 隐藏');\n    stopPolling();\n});\n\n// 全局事件\nuni.$on('user-login', () => {\n    stopPolling();\n    startPolling();\n});\nuni.$on('user-logout', () => {\n    stopPolling();\n});\nuni.$on('refresh-unread', () => {\n    const userInfo = uni.getStorageSync('userinfo');\n    if (userInfo?.phoneNumber) {\n        fetchTotalUnreadCount(userInfo.phoneNumber);\n    }\n});\n</script>\n\n<style>\n/* 保留或补充全局样式 */\n</style>\n","import App from './App'\n\n// #ifndef VUE3\nimport Vue from 'vue'\nimport './uni.promisify.adaptor'\nVue.config.productionTip = false\nApp.mpType = 'app'\nconst app = new Vue({\n  ...App\n})\napp.$mount()\n// #endif\n\n// #ifdef VUE3\nimport { createSSRApp } from 'vue'\nexport function createApp() {\n  const app = createSSRApp(App)\n  return {\n    app\n  }\n}\n// #endif"],"names":["uni","uniCloud","onLaunch","onShow","onHide","createSSRApp","App"],"mappings":"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"}