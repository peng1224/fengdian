{"version":3,"names":["unreadWatcher","updateTabBarBadge","total","common_vendor","index","setTabBarBadge","text","toString","removeTabBarBadge","e","__f__","stopGlobalUnreadWatcher","close","fetchTotalUnreadCount","_ref","_asyncToGenerator2","_regeneratorRuntime2","mark","_callee","phoneNumber","res","totalUnread","wrap","_callee$","_context","prev","next","concat","nr","callFunction","name","data","userPhoneNumber","sent","result","success","$emit","msg","t0","stop","_x","apply","arguments","startGlobalWatcher","db","database","dbCmd","command","collection","where","users","in","watch","onChange","snapshot","type","id","changes","docChanges","length","onError","err","code","message","details","setTimeout","initErr","resetAndStartGlobalWatcher","userInfo","getStorageSync","onLaunch","onShow","onHide","$on","onRefresh","createApp","app","createSSRApp","_sfc_main"],"sources":["App.vue","main.js"],"sourcesContent":["// App.vue\n<script setup>\nimport { onLaunch, onShow, onHide } from '@dcloudio/uni-app';\n\nlet unreadWatcher = null;\n\nconst updateTabBarBadge = (total) => {\n    try {\n        if (total > 0) {\n            uni.setTabBarBadge({\n                index: 2,\n                text: total > 99 ? '99+' : total.toString()\n            });\n        } else {\n            uni.removeTabBarBadge({ index: 2 });\n        }\n    } catch (e) {\n        console.warn('更新角标失败:', e);\n    }\n};\n\nconst stopGlobalUnreadWatcher = () => {\n    if (unreadWatcher) {\n        console.log('停止全局监听器');\n        unreadWatcher.close();\n        unreadWatcher = null;\n    }\n};\n\nconst fetchTotalUnreadCount = async (phoneNumber) => {\n    console.log(`开始获取总未读数: ${phoneNumber}`);\n    try {\n        const res = await uniCloud.callFunction({\n            name: 'get-total-unread-count',\n            data: { userPhoneNumber: phoneNumber }\n        });\n        \n        console.log('未读计数结果:', res);\n        \n        if (res.result && res.result.success) {\n            const totalUnread = res.result.totalUnread || 0;\n            console.log(`获取到总未读数: ${totalUnread}`);\n            updateTabBarBadge(totalUnread);\n            // 通知所有页面更新\n            uni.$emit('global-unread-updated', totalUnread);\n        } else {\n            console.error('获取未读数失败:', res.result ? res.result.msg : '无结果');\n        }\n    } catch (error) {\n        console.error('获取未读数异常:', error);\n    }\n};\n\nconst startGlobalWatcher = (userPhoneNumber) => {\n    console.log(`启动全局监听器: ${userPhoneNumber}`);\n    \n    const db = uniCloud.database();\n    const dbCmd = db.command;\n    \n    // 确保停止现有监听器\n    stopGlobalUnreadWatcher();\n    \n    try {\n        // 创建监听器\n        unreadWatcher = db.collection('ChatSession')\n            .where({\n                users: dbCmd.in([userPhoneNumber])\n            })\n            .watch({\n                onChange: (snapshot) => {\n                    console.log('全局监听器收到变化:', {\n                        type: snapshot.type,\n                        id: snapshot.id,\n                        changes: snapshot.docChanges.length\n                    });\n                    \n                    // 处理变化事件\n                    if (snapshot.type === 'init') {\n                        console.log('初始化数据，跳过处理');\n                        return;\n                    }\n                    \n                    // 立即更新未读数\n                    fetchTotalUnreadCount(userPhoneNumber);\n                },\n                onError: (err) => {\n                    console.error('全局监听器错误:', {\n                        code: err.code,\n                        message: err.message,\n                        details: err.details\n                    });\n                    \n                    // 出错后尝试重启\n                    setTimeout(() => {\n                        console.warn('监听器出错，尝试重启...');\n                        startGlobalWatcher(userPhoneNumber);\n                    }, 3000);\n                }\n            });\n        \n        console.log('监听器创建成功');\n    } catch (initErr) {\n        console.error('监听器创建失败:', initErr);\n    }\n};\n\nconst resetAndStartGlobalWatcher = () => {\n    console.log('重置并启动监听器');\n    \n    const userInfo = uni.getStorageSync('userinfo');\n    const userPhoneNumber = userInfo?.phoneNumber;\n    \n    if (userPhoneNumber) {\n        startGlobalWatcher(userPhoneNumber);\n        // 立即获取一次未读数\n        fetchTotalUnreadCount(userPhoneNumber);\n    } else {\n        console.log('用户未登录，无法启动监听器');\n        updateTabBarBadge(0);\n    }\n};\n\nonLaunch(() => {\n    console.log('App Launch');\n    resetAndStartGlobalWatcher();\n});\n\nonShow(() => {\n    console.log('App Show');\n    const userInfo = uni.getStorageSync('userinfo');\n    if (userInfo?.phoneNumber) {\n        // 每次显示应用时刷新未读数\n        fetchTotalUnreadCount(userInfo.phoneNumber);\n        \n        // 添加连接状态检查\n        if (!unreadWatcher) {\n            console.log('监听器不存在，重新启动');\n            resetAndStartGlobalWatcher();\n        }\n    }\n});\n\nonHide(() => {\n    console.log('App Hide');\n    // 应用隐藏时停止监听节省资源\n    stopGlobalUnreadWatcher();\n});\n\n// 事件监听\nuni.$on('user-login', () => {\n    console.log('收到用户登录事件');\n    resetAndStartGlobalWatcher();\n});\n\nuni.$on('user-logout', () => {\n    console.log('收到用户登出事件');\n    stopGlobalUnreadWatcher();\n    updateTabBarBadge(0);\n});\n\n// 添加数据库连接状态监听\nuniCloud.onRefresh(() => {\n    console.log('数据库连接状态变化，重启监听器');\n    const userInfo = uni.getStorageSync('userinfo');\n    if (userInfo?.phoneNumber) {\n        resetAndStartGlobalWatcher();\n    }\n});\n</script>","import App from './App'\n\n// #ifndef VUE3\nimport Vue from 'vue'\nimport './uni.promisify.adaptor'\nVue.config.productionTip = false\nApp.mpType = 'app'\nconst app = new Vue({\n  ...App\n})\napp.$mount()\n// #endif\n\n// #ifdef VUE3\nimport { createSSRApp } from 'vue'\nexport function createApp() {\n  const app = createSSRApp(App)\n  return {\n    app\n  }\n}\n// #endif"],"mappings":"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","ignoreList":[]}